# This is a basic workflow to help you get started with Actions

name: Render documents and upload

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  render_document:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      RENV_PATHS_ROOT: ~/.local/share/renv
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v3
      # - uses: r-lib/actions/setup-r@v1
      - name: Install libcurl
        run: |
          sudo apt-get update
          sudo apt-get install libcurl4-openssl-dev
      - name: Set RENV_PATHS_ROOT
        shell: bash
        run: |
          echo "RENV_PATHS_ROOT=${{ runner.temp }}/renv" >> $GITHUB_ENV
      - name: Restore Renv package cache
        uses: actions/cache@v2
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-
      - name: Setup pandoc 
        uses: r-lib/actions/setup-pandoc@v1
      - name: Install and activate renv
        run: |
          install.packages("renv")
          renv::activate()
          renv::restore()
          # install.packages("rmarkdown")
        shell: Rscript {0}
      - name: Get R and OS version
        id: get-version
        run: |
          cat("##[set-output name=os-version;]", sessionInfo()$running, "\n", sep = "")
          cat("##[set-output name=r-version;]", R.Version()$version.string, sep = "")
        shell: Rscript {0}

      - name: Render document to html
        shell: Rscript {0}
        run: |
          library("rmarkdown")
          rmarkdown::render("index.Rmd", output_format = "html_document")

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: .
